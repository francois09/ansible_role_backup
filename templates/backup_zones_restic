#!/bin/bash
# Fais un tgz des zones à sauvegarder

# Quelques valeurs par défaut
BACKUP_DIR="{{ backup__conf.local_dir }}"
BACKUP_REPO="sftp:{{ backup__conf.restic_host }}:/home/$(hostname -s).$(hostname -d)/zones"
BACKUP_CONF_FILE="{{ backup__conf.local_conf }}"

# Si un fichier de paramètres existe, alors on le source
[ -e "$BACKUP_CONF_FILE" ] && . "$BACKUP_CONF_FILE"

LOGFILE={{ backup__conf.logfile }}

echo "*** Demarrage le :" $(date) " pour " $(uname -n) >>${LOGFILE}

if [ $# -lt 2 ]
then
    tries=5
else
    tries=$2
fi

if [ $# -ge 1 ]
then
    BACKUP_ZONES=$1
fi

for z in ${BACKUP_ZONES}
do
  real_z=$(echo $z|sed -e 's/\///;s/\//-/g')

  # Check/create repository
  restic -r $BACKUP_REPO/$real_z -p /root/.restic_repo_password cat config >/dev/null 2>&1 || restic -r $BACKUP_REPO/$real_z -p /root/.restic_repo_password init >>$LOGFILE
  rc=$?
  if [ $rc != 0 ]
  then
      if [ $tries -gt 0 ]
      then
	  echo $0 "$z" $(($tries - 1)) | at now + 10 min >>${LOGFILE} 2>&1
      else
	  echo "Errors during zones backup repository check/creation. Check ${LOGFILE} on " $(uname -n)
	  tail ${LOGFILE}
	  exit $rc
      fi
      exit
  fi

  # Puis sauvegarder ça avec restic
  restic -r $BACKUP_REPO/$real_z -p /root/.restic_repo_password backup {% for xcl in backup__conf.exclude|default([]) %}--exclude="{{ xcl }}" {% endfor %} --one-file-system $z >>$LOGFILE
  rc=$?
  if [ $rc != 0 ]
  then
      if [ $tries -gt 0 ]
      then
	  echo $0 "$z" $(($tries - 1)) | at now + 10 min >>${LOGFILE} 2>&1
      else
	  echo "Errors during zones backup for $z. Check ${LOGFILE} on " $(uname -n)
	  tail ${LOGFILE}
	  exit $rc
      fi
      exit
  fi

done
echo "*** Fin le :" $(date) " pour " $(uname -n) >>${LOGFILE}
echo >>${LOGFILE}
