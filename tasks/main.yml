---
- name: Use classic old-school backup
  include_tasks: classic.yml
  when:
    - not backup__time_machine
    - not backup__restic

- name: Use Return2ThePast backup
  include_tasks: return2thepast.yml
  when:
    - backup__time_machine

- name: Use restic backup snapshots
  include_tasks: restic.yml
  when:
    - backup__restic

- name: Create backup default parms file
  template:
    src: default_backup
    dest: "/etc/default/backup"
    mode: 0660
    owner: root
    group: root
  when:
    - backup__install
    - backup__configure

- name: Create backup log rotate file
  template:
    src: logfile
    dest: "/etc/logrotate.d/backup"
    mode: 0664
    owner: root
    group: root
  when:
    - backup__install
    - backup__configure

- name: Create backup_zones file
  template:
    src: "backup_zones{% if backup__restic %}_restic{% endif %}"
    dest: "/usr/local/bin/backup_zones"
    mode: 0770
    owner: root
    group: root
  when:
    - backup__install
    - backup__configure

- name: Create backup_mysql file
  template:
    src: "backup_mysql{% if backup__restic %}_restic{% endif %}"
    dest: "/usr/local/bin/backup_mysql"
    mode: 0770
    owner: root
    group: root
  when:
    - backup__install
    - backup__configure
    - backup__mysql

- name: Create backup_users file
  template:
    src: "backup_users{% if backup__restic %}_restic{% endif %}"
    dest: "/usr/local/bin/backup_users"
    mode: 0770
    owner: root
    group: root
  when:
    - backup__install
    - backup__configure

- name: Create backup_mysql cron
  cron:
    name: "Backup MySQL"
    cron_file: backup_mysql
    state: present
    hour: "3"
    minute: "0"
    user: root
    job: /usr/local/bin/backup_mysql
  when:
    - backup__install
    - backup__configure
    - backup__mysql

- name: Create backup_cleaner cron
  cron:
    name: "Backup cleaner"
    cron_file: backup_cleaner
    state: present
    hour: "{{ backup__cleaner_hour }}"
    minute: "{{ backup__cleaner_min }}"
    user: root
    job: /usr/local/bin/backup_cleaner
  when:
    - backup__install
    - backup__configure

- name: Create backup_zones cron
  cron:
    name: "Backup zones"
    cron_file: backup_zones
    state: present
    hour: "3"
    minute: "0"
    user: root
    job: /usr/local/bin/backup_zones
  when:
    - backup__install
    - backup__configure

- name: Create backup_users cron
  cron:
    name: "Backup users"
    cron_file: backup_users
    state: present
    hour: "4"
    minute: "0"
    user: root
    job: /usr/local/bin/backup_users
  when:
    - backup__install
    - backup__configure

- name: Create backup_mirror file
  template:
    src: backup_mirror
    dest: "/usr/local/bin/backup_mirror"
    mode: 0770
    owner: root
    group: root
  when:
    - backup__install
    - backup__configure
    - backup__mirror

- name: Delete backup_mirror file
  file:
    path: "/usr/local/bin/backup_mirror"
    state: absent
  when:
    - backup__install
    - backup__configure
    - not backup__mirror

##
## Need to remove this cron file when mirror is false
##
- name: Create or remove backup_mirror cron
  cron:
    name: "Backup mirror"
    cron_file: backup_mirror
    state: "{% if backup__mirror %}present{% else %}absent{% endif %}"
    hour: "{{ backup__mirror_hour }}"
    minute: "{{ backup__mirror_min }}"
    user: root
    job: /usr/local/bin/backup_mirror
  when:
    - backup__install
    - backup__configure
